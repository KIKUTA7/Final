{"ast":null,"code":"var _jsxFileName = \"C:\\\\Beqa\\\\ProLan\\\\WDL\\\\KIU\\\\Final Project\\\\final\\\\src\\\\car.tsx\";\nimport React from \"react\";\nimport Price from \"./price\";\nimport data4 from \"./data4.json\";\nimport Icons from \"./icons\";\nimport Info from \"./info\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Car(props) {\n  function getTimeDifference(dateString) {\n    const inputDate = moment(dateString);\n    const currentDate = moment();\n    const differenceInMilliseconds = currentDate.diff(inputDate);\n\n    // Convert milliseconds to days\n    const millisecondsInADay = 1000 * 60 * 60 * 24;\n    const numberOfDays = Math.floor(differenceInMilliseconds / millisecondsInADay);\n    if (numberOfDays > 0) {\n      return `${numberOfDays} დღის`;\n    }\n\n    // Convert milliseconds to hours\n    const millisecondsInAnHour = 1000 * 60 * 60;\n    const numberOfHours = Math.floor(differenceInMilliseconds / millisecondsInAnHour);\n    if (numberOfHours > 0) {\n      return `${numberOfHours} საათის`;\n    }\n\n    // Convert milliseconds to minutes\n    const millisecondsInAMinute = 1000 * 60;\n    const numberOfMinutes = Math.floor(differenceInMilliseconds / millisecondsInAMinute);\n    if (numberOfMinutes > 0) {\n      return `${numberOfMinutes} წუთის წინ`;\n    }\n    return \"ახლა\";\n  }\n  const index = props.id;\n  const car = data4.data.items.filter(item => index === item.man_id);\n  const link = `https://static.my.ge/myauto/photos/${car[0].photo}/thumbs/${car[0].car_id}_1.jpg?v=${car[0].photo_ver}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(Price, {\n      price: car[0].price\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Icons, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Info, {\n      gear: car[0].gear_type_id,\n      engine_volume: car[0].engine_volume,\n      fuel_type: car[0].fuel_type_id,\n      run: car[0].car_run_km,\n      steering: car[0].drive_type_id\n      // carBrand = {mwarmoebeli + modeli}\n      ,\n      carYear: car[0].prod_year,\n      country: car[0].location_id,\n      views: car[0].views,\n      days: getTimeDifference(car[0].order_date)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"img\",\n      src: link\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_c = Car;\nexport default Car;\nvar _c;\n$RefreshReg$(_c, \"Car\");","map":{"version":3,"names":["React","Price","data4","Icons","Info","moment","jsxDEV","_jsxDEV","Car","props","getTimeDifference","dateString","inputDate","currentDate","differenceInMilliseconds","diff","millisecondsInADay","numberOfDays","Math","floor","millisecondsInAnHour","numberOfHours","millisecondsInAMinute","numberOfMinutes","index","id","car","data","items","filter","item","man_id","link","photo","car_id","photo_ver","className","children","price","fileName","_jsxFileName","lineNumber","columnNumber","gear","gear_type_id","engine_volume","fuel_type","fuel_type_id","run","car_run_km","steering","drive_type_id","carYear","prod_year","country","location_id","views","days","order_date","src","_c","$RefreshReg$"],"sources":["C:/Beqa/ProLan/WDL/KIU/Final Project/final/src/car.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Price from \"./price\";\r\nimport data4 from \"./data4.json\";\r\nimport Icons from \"./icons\";\r\nimport Info from \"./info\";\r\nimport moment from \"moment\";\r\n\r\ninterface CarProps {\r\n  id: number;\r\n}\r\n\r\nfunction Car(props: CarProps) {\r\n  function getTimeDifference(dateString: string): string {\r\n    const inputDate: moment.Moment = moment(dateString);\r\n    const currentDate: moment.Moment = moment();\r\n\r\n    const differenceInMilliseconds: number = currentDate.diff(inputDate);\r\n\r\n    // Convert milliseconds to days\r\n    const millisecondsInADay: number = 1000 * 60 * 60 * 24;\r\n    const numberOfDays: number = Math.floor(\r\n      differenceInMilliseconds / millisecondsInADay\r\n    );\r\n\r\n    if (numberOfDays > 0) {\r\n      return `${numberOfDays} დღის`;\r\n    }\r\n\r\n    // Convert milliseconds to hours\r\n    const millisecondsInAnHour: number = 1000 * 60 * 60;\r\n    const numberOfHours: number = Math.floor(\r\n      differenceInMilliseconds / millisecondsInAnHour\r\n    );\r\n\r\n    if (numberOfHours > 0) {\r\n      return `${numberOfHours} საათის`;\r\n    }\r\n\r\n    // Convert milliseconds to minutes\r\n    const millisecondsInAMinute: number = 1000 * 60;\r\n    const numberOfMinutes: number = Math.floor(\r\n      differenceInMilliseconds / millisecondsInAMinute\r\n    );\r\n\r\n    if (numberOfMinutes > 0) {\r\n      return `${numberOfMinutes} წუთის წინ`;\r\n    }\r\n\r\n    return \"ახლა\";\r\n  }\r\n\r\n  const index: number = props.id;\r\n  const car = data4.data.items.filter((item) => index === item.man_id);\r\n  const link: string = `https://static.my.ge/myauto/photos/${car[0].photo}/thumbs/${car[0].car_id}_1.jpg?v=${car[0].photo_ver}`;\r\n  return (\r\n    <div className=\"card\">\r\n      <Price price={car[0].price} />\r\n      <Icons />\r\n      <Info\r\n        gear={car[0].gear_type_id}\r\n        engine_volume={car[0].engine_volume}\r\n        fuel_type={car[0].fuel_type_id}\r\n        run={car[0].car_run_km}\r\n        steering={car[0].drive_type_id}\r\n        // carBrand = {mwarmoebeli + modeli}\r\n        carYear={car[0].prod_year}\r\n        country={car[0].location_id}\r\n        views={car[0].views}\r\n        days={getTimeDifference(car[0].order_date)}\r\n      />\r\n      <img className=\"img\" src={link} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Car;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}