{"ast":null,"code":"var _jsxFileName = \"C:\\\\Beqa\\\\ProLan\\\\WDL\\\\KIU\\\\Final Project\\\\final\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport './App2.css';\nimport Filter from './components/filter';\nimport Header from './components/header';\nimport Myauto from './components/myauto';\nimport Navbar from './components/navbar';\nimport Main from './components/main';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [link, setLink] = useState('https://api2.myauto.ge/ka/products/?ForRent=&Mans=&Cats=&PriceFrom=&PriceTo=&Period=&SortOrder=&Page=');\n  const [filteredCarIds, setFilteredCarIds] = useState([]);\n  const [fullLink, setFullLink] = useState('https://api2.myauto.ge/ka/products/?ForRent=&Mans=&Cats=&PriceFrom=&PriceTo=&Period=&SortOrder=&Page=');\n  const selectCurrency = currency => {\n    setCurrency(currency);\n  };\n  useEffect(() => {\n    fetch(fullLink).then(response => response.json()).then(data => {\n      const ids = data.data.items.map(item => item.car_id);\n      setFilteredCarIds(ids); // Initialize filteredCarIds with all carIds\n    }).catch(err => console.log(err));\n  }, [fullLink]); // Add link as a dependency to trigger the effect when it changes\n\n  const [currency, setCurrency] = useState(\"GEL\");\n  const [period, setPeriod] = useState(\"\");\n  const [sortOrder, setSortOrder] = useState(1);\n  const [page, setPage] = useState(1);\n  const currRef = useRef(null);\n  const [car, setCar] = useState([]);\n  const [metaData, setMetaData] = useState(null);\n  let IDs = car.map(x => x.car_id);\n  useEffect(() => {\n    fetch(fullLink).then(response => response.json()).then(data => {\n      setCar(data.data.items);\n      setMetaData(data.data.meta);\n    }).catch(err => console.log(err));\n    console.log(fullLink);\n  }, [fullLink]);\n  const handlePeriodChange = event => {\n    let per = parseInt(event.target.value);\n    setPeriod(per <= 3 ? `${per}h` : per <= 72 ? `${per / 24}d` : `${per / 168}w`);\n  };\n  const handleSortOrderChange = event => {\n    setSortOrder(parseInt(event.target.value));\n  };\n  useEffect(() => {\n    console.log(page);\n  }, [page]);\n  useEffect(() => {\n    setFullLink(link + \"&Period=\" + period + \"&SortOrder=\" + sortOrder + \"&Page=\" + page);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Myauto, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      setLink: setLink,\n      selectCurrency: selectCurrency,\n      currency: currency,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      Page: page,\n      setPage: setPage,\n      IDs: IDs,\n      car: car,\n      handlePeriodChange: handlePeriodChange,\n      handleSortOrderChange: handleSortOrderChange,\n      meta: metaData,\n      selectCurrency: setCurrency,\n      currency: currency\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"FlVI1j4XW+SN5WQgUOONYI72Xp8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Filter","Header","Myauto","Navbar","Main","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","link","setLink","filteredCarIds","setFilteredCarIds","fullLink","setFullLink","selectCurrency","currency","setCurrency","fetch","then","response","json","data","ids","items","map","item","car_id","catch","err","console","log","period","setPeriod","sortOrder","setSortOrder","page","setPage","currRef","car","setCar","metaData","setMetaData","IDs","x","meta","handlePeriodChange","event","per","parseInt","target","value","handleSortOrderChange","children","fileName","_jsxFileName","lineNumber","columnNumber","Page","_c","$RefreshReg$"],"sources":["C:/Beqa/ProLan/WDL/KIU/Final Project/final/src/App.tsx"],"sourcesContent":["import React, { ChangeEvent, useEffect, useRef, useState } from 'react';\nimport './App.css';\nimport './App2.css';\nimport Filter from './components/filter';\nimport Header from './components/header';\nimport Myauto from './components/myauto';\nimport Navbar from './components/navbar';\nimport Main from './components/main';\n\nfunction App() {\n  const [link, setLink] = useState<string>('https://api2.myauto.ge/ka/products/?ForRent=&Mans=&Cats=&PriceFrom=&PriceTo=&Period=&SortOrder=&Page=');\n  const [filteredCarIds, setFilteredCarIds] = useState<number[]>([]);\n  const [fullLink, setFullLink] = useState<string>('https://api2.myauto.ge/ka/products/?ForRent=&Mans=&Cats=&PriceFrom=&PriceTo=&Period=&SortOrder=&Page=');\n\n  const selectCurrency = (currency: string) => {\n    setCurrency(currency);\n  };\n  \n    useEffect(() => {\n\n      fetch(fullLink)\n        .then(response => response.json())\n        .then(data => {\n          const ids = data.data.items.map((item: any) => item.car_id);\n          setFilteredCarIds(ids);  // Initialize filteredCarIds with all carIds\n        })\n        .catch(err => console.log(err));\n    }, [fullLink]); // Add link as a dependency to trigger the effect when it changes\n\n \n  \n    const [currency, setCurrency] = useState<string>(\"GEL\");\n    const [period, setPeriod] = useState<string>(\"\");\n    const [sortOrder, setSortOrder] = useState<number>(1);\n    const [page, setPage] = useState<number>(1);\n    const currRef = useRef<HTMLDivElement>(null);\n\n    const [car, setCar] = useState<any[]>([]);\n    \n    interface MetaData {\n      total: number;\n      per_page: number;\n      current_page: number;\n      last_page: number;\n    }\n    \n    const [metaData, setMetaData] = useState<MetaData | null>(null);\n\n    let IDs: number[] = car.map(x => x.car_id);\n\n    useEffect(() => {\n      fetch(fullLink)\n        .then(response => response.json())\n        .then(data => {\n          setCar(data.data.items);\n          setMetaData(data.data.meta);\n        })\n        .catch(err => console.log(err));\n        console.log(fullLink)\n    }, [fullLink]);\n    \n    \n    \n\n    const handlePeriodChange = (event: ChangeEvent<HTMLSelectElement>) => {\n      let per = parseInt(event.target.value);\n      setPeriod(\n        per <= 3 ? `${per}h` : per <= 72 ? `${per / 24}d` : `${per / 168}w`\n      );\n    };\n    \n    \n    const handleSortOrderChange = (event: ChangeEvent<HTMLSelectElement>) => {\n      setSortOrder(parseInt(event.target.value));\n    };\n\n\n    \n    \n    useEffect(() => {\n      console.log(page);\n    }, [page]);\n    \n    useEffect(() =>{\n      setFullLink(link+\"&Period=\"+period+\"&SortOrder=\"+sortOrder+\"&Page=\"+page)\n    })\n    \n\n \n    return (\n      <>\n        <Header />\n        <Myauto />\n        <Filter setLink={setLink} selectCurrency={selectCurrency} currency={currency} setPage={setPage}/>\n        <Navbar />\n        <Main\n          Page = {page}\n          setPage={setPage}\n          IDs={IDs}\n          car={car}\n          handlePeriodChange={handlePeriodChange}\n          handleSortOrderChange={handleSortOrderChange}\n          meta = {metaData}\n          selectCurrency={setCurrency}\n          currency={currency}\n        />\n      </>\n      \n    );\n  }\n  \nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}